part of featurehub_client_api.api;

// This file is generated by https://github.com/dart-ogurets/dart-openapi-maven - you should not modify it
// log generation bugs on Github, as part of the license, you must not remove these headers from the Mustache templates.
// this project is maintained as part of FeatureHub - please consider sponsoring us at https://github.com/featurehub-io

// ApplicationVersionInfo
class ApplicationVersionInfo {
  String name;

  String version;

  ApplicationVersionInfo({required this.name, required this.version});

  @override
  String toString() {
    return 'ApplicationVersionInfo[name=$name, version=$version, ]';
  }

  static String fromJson_name(Map<String, dynamic> json) {
    final _jsonData = json[r'name'];
    if (_jsonData == null) {
      throw DeserialisationError(json, r'name', r'',
          'name field is null and is required to have a value');
    }

    return (json[r'name'] as String); // sausage
  }

  static String fromJson_version(Map<String, dynamic> json) {
    final _jsonData = json[r'version'];
    if (_jsonData == null) {
      throw DeserialisationError(json, r'version', r'',
          'version field is null and is required to have a value');
    }

    return (json[r'version'] as String); // sausage
  }

  ApplicationVersionInfo.fromJson(Map<String, dynamic> json)
      : this.name = fromJson_name(json),
        this.version = fromJson_version(json);

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
    json[r'name'] = name;
    json[r'version'] = version;
    return json;
  }

  static List<ApplicationVersionInfo> listFromJson(List<dynamic>? json) {
    return json == null
        ? <ApplicationVersionInfo>[]
        : json.map((value) => ApplicationVersionInfo.fromJson(value)).toList();
  }

  static Map<String, ApplicationVersionInfo> mapFromJson(
      Map<String, dynamic>? json) {
    final map = <String, ApplicationVersionInfo>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) =>
          map[key] = ApplicationVersionInfo.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is ApplicationVersionInfo &&
        runtimeType == __other.runtimeType) {
      return name == __other.name && version == __other.version;
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = runtimeType.hashCode;

    hashCode = hashCode * 31 + name.hashCode;

    hashCode = hashCode * 31 + version.hashCode;

    return hashCode;
  }

  ApplicationVersionInfo copyWith({
    String? name,
    String? version,
  }) {
    final _copy_name = name ?? this.name;

    final _copy_version = version ?? this.version;

    return ApplicationVersionInfo(
      name: _copy_name,
      version: _copy_version,
    );
  }
}
